name: .NET Build and Test

on:
  push:
    branches:
      - main
  workflow_dispatch: # Enables manual triggering
    inputs:
      branch:
        description: "Branch to build"
        required: false
        default: "main"
      verbosity:
        description: "Verbosity level for dotnet commands (minimal, normal, detailed, diagnostic)"
        required: false
        default: "detailed"

env:
  VERBOSITY: quiet

jobs:
  pull-src-code:
    runs-on: ubuntu-latest
      - name: Determine branch to checkout
        id: determine-branch
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "BRANCH=${{ inputs.branch }}" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV
          else
            echo "BRANCH=main" >> $GITHUB_ENV
          fi
          echo "The branch that will be checked out is: $BRANCH"

      # Checkout repository code
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ref: ${{ env.BRANCH }}
  build:
    steps:
      # Setup .NET Core version
      - name: Setup .NET Core version 8
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      # Determines verbosity dynamically
      - name: Set Variables
        id: vars
        run: |
          echo "VERBOSITY=${{ inputs.verbosity || env.VERBOSITY }}" >> $GITHUB_ENV

      # Restores dependencies
      - name: Restore dependencies
        run: dotnet restore --no-cache --verbosity $VERBOSITY

      # Builds the solution
      - name: Build
        run: dotnet build --configuration Release --no-restore --verbosity $VERBOSITY
      
      # Creates the artifact
      - name: Publish artifact
        run: dotnet publish -c Release -o artifacts --verbosity $VERBOSITY --no-build --no-restore
      
      # Uploads the artifact to github
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: portfolio
          path: artifacts/
          retention-days: 7
          compression-level: 0 # no compression
    
      - name: Output artifact ID and Url
        run:  echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }} and Artifact Url is ${{ steps.artifact-upload-step.outputs.artifact-url }}'

      # Run tests
      - name: Run Tests
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --verbosity $VERBOSITY
