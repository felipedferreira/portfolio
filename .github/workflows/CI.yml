name: Continuous Integration Pipeline

on:
  push:
    branches:
      - main
  pull_request:  
    branches:  
      - main
  workflow_dispatch: # Enables manual triggering
    inputs:
      branch:
        description: "Branch to build"
        required: false
        default: "main"
      verbosity:
        description: "Verbosity level for dotnet commands (quiet, minimal, normal, detailed, diagnostic)"
        required: false
        default: "detailed"

env:
  VERBOSITY: quiet

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    # Set Default value of BRANCH to main
    - name: Set Default value of BRANCH
      run: echo "BRANCH=main" >> $GITHUB_ENV

    # Set Default value of Verbosity to quiet
    - name: Set Default value of VERBOSITY
      run: echo "VERBOSITY=${{ github.event.inputs.verbosity != '' && github.event.inputs.verbosity || 'quiet' }}" >> $GITHUB_ENV

    # Set value of BRANCH to whatever is passed in the workflow_dispatch
    - name: Set BRANCH value when workflow_dispatch is triggered 
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: echo "BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV

    # Set value of BRANCH to whatever PR branch is coming from
    - name: Set BRANCH value when pull_request is triggered 
      if: ${{ github.event_name == 'pull_request' }}
      run: echo "BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV

    # Displays value of BRANCH
    - name: Displays BRANCH value
      run: echo "Branch is currently set to $BRANCH"
    
    # Displays value of Verbosity
    - name: Displays Verbosity value
      run: echo "Verbosity is currently set to $VERBOSITY"

    # Checkout repository code
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ env.BRANCH }}
    
    # Setup .NET Core version
    - name: Setup .NET Core version 8
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x

    # Determines verbosity dynamically
    - name: Set Variables
      id: vars
      run: |
        echo "VERBOSITY=${{ inputs.verbosity || env.VERBOSITY }}" >> $GITHUB_ENV

    # Restores dependencies
    - name: Restore dependencies
      run: dotnet restore --no-cache --verbosity $VERBOSITY

    # Builds the solution
    - name: Build
      run: dotnet build --configuration Release --no-restore --verbosity $VERBOSITY
    
    # Creates the artifact
    - name: Publish artifact
      run: dotnet publish -c Release -o artifacts --verbosity $VERBOSITY --no-build --no-restore
    
    # Uploads the artifact to github
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      id: artifact-upload-step
      with:
        name: portfolio
        path: artifacts/
        retention-days: 7
        compression-level: 0 # no compression
  
    - name: Output artifact ID and Url
      run:  echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }} and Artifact Url is ${{ steps.artifact-upload-step.outputs.artifact-url }}'

    # Run tests
    - name: Run Tests
      run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --verbosity $VERBOSITY